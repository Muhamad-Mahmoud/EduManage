@model CrsListwithDepViewModel
@{
  ViewData["Title"] = "Course List";
}

<div class="data-container fade-in-up">
  <!-- Header -->
  <div class="data-header">
    <h2>Course List</h2>
    <a asp-controller="Course" asp-action="Add" class="add-btn">
      Add New Course
    </a>
  </div>

  <!-- Search Bar -->
  @using (Html.BeginForm("Index", "Course", FormMethod.Get, new { @class = "search-container", novalidate = "novalidate" }))
  {
    <div class="search-form">
      <label for="searchInput" class="form-label visually-hidden">Search Courses</label>
      <div class="search-input-group">
        @Html.TextBox(
               "search",
               ViewBag.Search as string,
               new
               {
                 @class = "form-control",
                 placeholder = "Search by name or department",
                 @id = "searchInput",
                 aria_label = "Search courses",
                 minlength = "2",
                 required = "required"
               })
        <button type="submit" class="btn btn-primary">
          Search
        </button>
      </div>
      <div class="search-help-text">Enter at least 2 characters to search.</div>
    </div>
  }

  <!-- Course Table -->
  <div class="data-table">
    <table class="table table-hover text-center align-middle">
      <thead>
        <tr>
          <th scope="col">Course Name</th>
          <th scope="col">Department</th>
          <th scope="col">Degree</th>
          <th scope="col">Min Degree</th>
          <th scope="col">Hours</th>
          <th scope="col">Actions</th>
        </tr>
      </thead>
      <tbody id="courseTableBody">
        @foreach (var course in Model.CoursesList)
        {
          <tr>
            <td>@course.Name</td>
            <td>@course.Department?.Name</td>
            <td>@course.Degree</td>
            <td>@course.MinDegree</td>
            <td>@course.Hours</td>
            <td>
              <div class="action-buttons">
                <a asp-action="Edit"
                   asp-controller="Course"
                   asp-route-id="@course.Id"
                   class="btn-edit"
                   aria-label="Edit @course.Name">
                  Edit
                </a>
                <button type="button"
                        class="btn-delete delete-btn"
                        data-id="@course.Id"
                        data-name="@course.Name"
                        aria-label="Delete @course.Name">
                  Delete
                </button>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>

  @if (!Model.CoursesList.Any())
  {
    <div class="empty-state">
      <div class="empty-state-icon">📚</div>
      <p class="empty-state-text">No courses found.</p>
    </div>
  }
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header bg-danger text-white">
        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        Are you sure you want to delete "<strong id="courseName"></strong>"?
      </div>
      <div class="modal-footer">
        <button class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
        @using (Html.BeginForm("Delete", "Course", FormMethod.Post, new { id = "deleteForm" }))
        {
          @Html.AntiForgeryToken()
          @Html.Hidden("id", "", new { @id = "deleteId" })
          <button type="submit" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
        }
      </div>
    </div>
  </div>
</div>

@section Scripts {
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const deleteModalEl = document.getElementById('deleteModal');
      const deleteModal = new bootstrap.Modal(deleteModalEl);
      const nameDisplay = document.getElementById('courseName');
      const idInput = document.getElementById('deleteId');
      const deleteForm = document.getElementById('deleteForm');
      const confirmBtn = document.getElementById('confirmDeleteBtn');

      // Client-side search filter
      document.getElementById('searchInput').addEventListener('input', function () {
        const value = this.value.toLowerCase();
        document.querySelectorAll('#courseTableBody tr').forEach(row => {
          const name = row.cells[0].textContent.toLowerCase();
          const department = row.cells[1].textContent.toLowerCase();
          row.style.display = (name.includes(value) || department.includes(value)) ? '' : 'none';
        });
      });

      // Show delete modal
      document.querySelectorAll('.delete-btn').forEach(button => {
        button.addEventListener('click', () => {
          nameDisplay.textContent = button.dataset.name;
          idInput.value = button.dataset.id;
          deleteModal.show();
        });
      });

      // Disable delete button on submit
      deleteForm.addEventListener('submit', () => {
        confirmBtn.disabled = true;
      });
    });
  </script>
}
